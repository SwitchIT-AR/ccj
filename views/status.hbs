<section id="data" >
  <div class="contenedor c-celeste">
   

    <div class="p-3">
      <h4>Datos actuales de registros</h4>
      <h5>Conteo de registros:</h5>
      <button id="download-xlsx" class="btn btn-success mt-2">Descargar en Excel</button>
    </div>
    <div class="card-deck">
      <div id="total" class="col mb-4"></div>
    </div>
    <div id="title-cards">
      <div class="px-3 pb-3">
        <h5>Registros:</h5>
      </div>
      <div class="card-deck" id="status"></div>
    </div>
     <div id="loader" style="text-align:center; padding: 2rem;">
  <div class="spinner-border text-primary" role="status">
    <span class="sr-only">Cargando...</span>
  </div>
</div>
  </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
<script>
  const downloadButton = document.getElementById("download-xlsx");
  const loader = document.getElementById("loader");
const status = document.getElementById("status");
const total = document.getElementById("total");

// Mostrar el loader al inicio
downloadButton.style.display = "none";
loader.style.display = "block";

  let registrosData = [];

  fetch("/landing/status/datos")
    .then((response) => response.json())
    .then((data) => {
      registrosData = data;
      const status = document.getElementById("status");
      const total = document.getElementById("total");
      data.map((reg) => {
        datos = `
             <div class="col-xs-12 col-md-4">
    <div class="card mb-4" style="min-height:185px">
      <div class="card-body" style="min-height: 600px">
      <p style="text-align: left; margin: 0">Nombre</p>
        <p style="text-align: left; font-size: 22px"><strong>${reg.datos.nombreApellido}</strong></p>
        <p style="text-align: left; margin: 0">Mail</p>
        <p style="text-align: left; font-size: 22px""><strong>${reg.datos.mail}</strong></p>
        <p style="text-align: left; margin: 0">Teléfono</p>
        <p style="text-align: left; font-size: 22px""><strong>${reg.datos.telefono?? '-'}</strong></p>
        <p style="text-align: left; margin: 0">Dirección</p>
        <p style="text-align: left; font-size: 22px""><strong>${reg.datos.direccion?? '-'}</strong></p>
        <p style="text-align: left; margin: 0">Mensaje</p>
        <p style="text-align: left; font-size: 18px""><strong>${reg.datos.mensaje?? '-'}</strong></p>
        <p style="text-align: left; margin: 0">Fecha</p>
        <p style="text-align: left; font-size: 22px""><strong>${new Date(reg.createdAt).toLocaleString()}</strong></p>

        ${
          reg.red === "Google"
            ? `<p class="t-rojo font-weight-bold mb-1">Registrado desde: <br>${reg.red}</p>`
            : reg.red === "Facebook"
            ? `<p class="text-primary font-weight-bold mb-1">Registrado desde: <br>${reg.red}</p>`
            : reg.red === "Instagram"
            ? `<p class="t-violeta font-weight-bold mb-1">Registrado desde: <br>${reg.red}</p>`
            : reg.red === "Linkedin"
            ? `<p class="t-amarillo font-weight-bold mb-1">Registrado desde: <br>${reg.red}</p>`
            : reg.red === "Sitio Web Gartenstadt"
            ? `<p class="t-verde font-weight-bold mb-1">Registrado desde: <br>${reg.red}</p>`
            : ""
        }

        <p class="mb-1"><strong>¿Cómo nos conociste?:</strong> <br>${reg.datos.como || "No especificado"}</p>
      </div>
    </div>
  </div>
            `;
        status.insertAdjacentHTML("afterbegin", datos);
        // Ocultar loader después de terminar
    loader.style.display = "none";
    downloadButton.style.display = "block";
      }).catch((err) => {
    console.error("Error al cargar los datos:", err);
    loader.innerHTML = "<p class='text-danger'>Error al cargar datos.</p>";
  });

      document.getElementById("download-xlsx").addEventListener("click", () => {
          if (!registrosData.length) return console.log(registrosData);

          const excelData = registrosData.map((reg) => ({
            Nombre: reg.datos?.nombreApellido || "",
            Mail: reg.datos?.mail || "",
            Teléfono: reg.datos?.telefono || "",
            Dirección: reg.datos?.direccion || "",
            Mensaje: reg.datos?.mensaje || "",
            Fecha: new Date(reg.createdAt).toLocaleString(),
            Red: reg.red,
            contacto: reg.datos?.como || "No especificado",
          }));

          const ws = XLSX.utils.json_to_sheet(excelData);
          const wb = XLSX.utils.book_new();
          XLSX.utils.book_append_sheet(wb, ws, "Registros");

          XLSX.writeFile(wb, "registros.xlsx");
        });

      const info = data.reduce(function (c, d) {
        if (!c[d.red]) c[d.red] = 0;
        c[d.red]++;
        return c;
      }, {});

      redes = `
          <div class="card">
            <div class="card-body">
              <h6>Sitio Web Gartenstadt: ${info["Sitio Web Gartenstadt"]
          ? info["Sitio Web Gartenstadt"]
          : 0
        }</h6>
              <h6>Facebook: ${info.Facebook ? info.Facebook : 0}</h6>
              <h6>Google: ${info.Google ? info.Google : 0}</h6>
              <h6>Instagram: ${info.Instagram ? info.Instagram : 0}</h6>
              <h6>Linkedin: ${info.Linkedin ? info.Linkedin : 0}</h6>
            </div>
          </div>
          `;
      total.insertAdjacentHTML("afterbegin", redes);
    });
</script>